#!/bin/bash

# Nimble Laptop Setup with Fish shell
# This script will set up a development machine using Fish instead of Zsh

set -e
trap 'ret=$?; test $ret -ne 0 && printf "failed\n\n" >&2; exit $ret' EXIT

fancy_echo() {
  local fmt="$1"; shift
  printf "\n$fmt\n" "$@"
}

pre_setup() {
  mkdir -p "$HOME/.config/fish"

  if [ ! -f "$HOME/.Brewfile" ]; then
    touch "$HOME/.Brewfile"
  fi

  ARCH="$(uname -m)"
  if [ "$ARCH" = "arm64" ]; then
    HOMEBREW_PREFIX="/opt/homebrew"
  else
    HOMEBREW_PREFIX="/usr/local"
  fi
}

append_to_fish() {
  local text="$1"
  local fish_config="$HOME/.config/fish/config.fish"

  touch "$fish_config"

  if ! grep -Fqs "$text" "$fish_config"; then
    echo "$text" >> "$fish_config"
  fi
}

config_fish() {
  read -r -p "Do you want to configure Fish shell? [Y|n] " response
  if [[ ! $response =~ (n|no|N) ]]; then
    fancy_echo "Installing Fish shell"
    brew install fish

    fancy_echo "Setting Fish as default shell"
    if ! grep -q "$(which fish)" /etc/shells; then
      echo "$(which fish)" | sudo tee -a /etc/shells
    fi
    chsh -s "$(which fish)"

    append_to_fish "eval (/opt/homebrew/bin/brew shellenv)"

    # --- Fisher setup ---
    fancy_echo "Installing fisher (Fish plugin manager)"
    fish -c 'curl -sL https://git.io/fisher | source && fisher install jorgebucaran/fisher'


    # --- Install useful plugins ---
    fish -c 'fisher install \
      jorgebucaran/autopair.fish \
      patrickf1/fzf.fish \
      jhillyerd/plugin-git \
      budimanjojo/tmux.fish \
      blackjid/plugin-kubectl \
      barnybug/docker-fish-completion'

    fancy_echo "Configured Fish with fisher + plugins"
  fi
}

install_tsrc() {
    pipx install tsrc
}


install_homebrew() {
  if ! command -v brew >/dev/null; then
    fancy_echo "Installing Homebrew ..."
    /bin/bash -c \
      "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"
    export PATH="$HOMEBREW_PREFIX/bin:$PATH"
  fi
}

append_general_dependencies() {
  fancy_echo "Appending general dependencies to Brewfile"

  tee "$HOME/.Brewfile" <<-EOF
    # Tools
    brew "git"

    # Editors
    cask "visual-studio-code" unless File.directory?("/Applications/Visual Studio Code.app")

    # Apps
    cask "slack" unless File.directory?("/Applications/Slack.app")
    cask "google-chrome" unless File.directory?("/Applications/Google Chrome.app")
    cask "iterm2" unless File.directory?("/Applications/iTerm.app")
    cask "openkey" unless File.directory?("/Applications/OpenKey.app")
EOF
}


append_backend_dependencies() {
  fancy_echo "Appending general dependencies to Brewfile"

  brew tap hashicorp/tap

  tee -a "$HOME/.Brewfile" <<-EOF
    # Shell
    brew "fish"

    # Tools
    brew "openssl"
    brew "tmux"
    brew "pyenv"
    brew "pyenv-virtualenv"
    brew "pipx"
    brew "fzf"
    brew "awscli"
    brew "hashicorp/tap/terraform"

    # Editors
    brew "neovim"
    cask "docker" unless File.directory?("/Applications/Docker.app")
    cask "visual-studio-code" unless File.directory?("/Applications/Visual Studio Code.app")
    cask "tableplus" unless File.directory?("/Applications/TablePlus.app")
    cask "dbeaver-community" unless File.directory?("/Applications/DBeaver.app")

    # Apps
    cask "slack" unless File.directory?("/Applications/Slack.app")
    cask "google-chrome" unless File.directory?("/Applications/Google Chrome.app")
    cask "iterm2" unless File.directory?("/Applications/iTerm.app")
EOF
}

append_mobile_dependencies() {
  fancy_echo "Nothing to install for mobile at the moment"
}

append_frontend_dependencies() {
  fancy_echo "Nothing to install for frontend at the moment"
}

install_dependencies() {
  fancy_echo "Updating Homebrew formulae ..."
  brew update --force

  fancy_echo "Installing dependencies"
  brew bundle --global --verbose --no-upgrade

  fancy_echo "Installed dependencies"
}

install_laptop_local() {
  if [ -f "$HOME/.laptop.local" ]; then
    fancy_echo "Running your customizations from ~/.laptop.local ..."
    . "$HOME/.laptop.local"
  fi
}

install() {
  read -r -p "Do you want to install Backend's dependencies? [y|N] " be_dep
  read -r -p "Do you want to install Mobile's dependencies? [y|N] " mo_dep
  read -r -p "Do you want to install Frontend's dependencies? [y|N] " fe_dep

  pre_setup
  install_homebrew
  append_general_dependencies

  if [[ $be_dep =~ (y|yes|Y) ]];then
    append_backend_dependencies
  fi

  if [[ $mo_dep =~ (y|yes|Y) ]];then
    append_mobile_dependencies
  fi

  if [[ $fe_dep =~ (y|yes|Y) ]];then
    append_frontend_dependencies
  fi

  install_dependencies

  if [[ $be_dep =~ (y|yes|Y) ]];then
    config_fish
    install_tsrc
  fi

  install_laptop_local
  brew cleanup
  brew "pipx"
}

# Run
install

fancy_echo "Installation successful with Fish"
